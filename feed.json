{
    "version": "https://jsonfeed.org/version/1",
    "title": "DavideBri",
    "home_page_url": "/",
    "feed_url": "/feed.json",
    "description": "just a personal blog",
    "icon": "/apple-touch-icon.png",
    "favicon": "/favicon.ico",
    "expired": false,
    
"items": [
    
        {
            "id": "/2023/01/27/what-are-you-hiding.html",
            "title": "what are you hiding?",
            "summary": "Some toughts about I live pricavy online",
            "content_text": "Anonymity online has become a hot topic in recent years, with many questioning why people would want to hide their identities online. But the truth is, anonymity is not about hiding something, it’s about protecting ourselves and our resources from potential harm.As we increasingly rely on the internet for everything from communication to banking to shopping, it’s important to understand how our personal information is being managed and what it is exposed to. By taking the time to understand how things work and implementing some basic precautions, we can shift our thinking to “Why do It need to access to this info/resources by default?”However, diving into the topic of online privacy can quickly become overwhelming, as it takes us down a rabbit hole of expert-level information and away from the friendly easy-to-use interfaces. That’s why it’s important to find a balance between privacy and ease of use. This can only be achieved by educating ourselves and others about these issues.It’s important to understand that online privacy is not just about hiding something, it’s about protecting ourselves and our resources. By taking the time to educate ourselves and implement some basic precautions, we can ensure that our personal information is safe and secure.This This may be a good start : Privacy guides",
            "content_html": "<p>Anonymity online has become a hot topic in recent years, with many questioning why people would want to hide their identities online. But the truth is, anonymity is not about hiding something, it’s about protecting ourselves and our resources from potential harm.</p><p>As we increasingly rely on the internet for everything from communication to banking to shopping, it’s important to understand how our personal information is being managed and what it is exposed to. By taking the time to understand how things work and implementing some basic precautions, we can shift our thinking to “Why do It need to access to this info/resources by default?”</p><p>However, diving into the topic of online privacy can quickly become overwhelming, as it takes us down a rabbit hole of expert-level information and away from the friendly easy-to-use interfaces. That’s why it’s important to find a balance between privacy and ease of use. This can only be achieved by educating ourselves and others about these issues.</p><p>It’s important to understand that online privacy is not just about hiding something, it’s about protecting ourselves and our resources. By taking the time to educate ourselves and implement some basic precautions, we can ensure that our personal information is safe and secure.</p><p>This This may be a good start : <a href=\"https://www.privacyguides.org/\">Privacy guides</a></p>",
            "url": "/2023/01/27/what-are-you-hiding.html",
            
            
            
            "tags": ["security","privacy","thoughts"],
            
            "date_published": "2023-01-27T00:00:00+00:00",
            "date_modified": "2023-01-27T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2022/12/22/120$-Reentrancy-attack.html",
            "title": "A 120$ Reentrancy attack",
            "summary": "How I won 120$ exploiting a Reentrancy attack on a Ethereum Smart Contract.",
            "content_text": "Since I wanted to gather as more information as possible about the Web3 ecosystem, I started looking for some meetup in my area.I found this one that was all about Blockchain develepment called Web3 Night, at my university, organized by Pisa Dev.Where it startedOne of the speaker, made a presentation about how smart contracts can be really easy to write but hard to make them secure, and showed a bunch of tool to help developers writing more secure smart contracts.As part of the talk, the speaker challenged the audience to try and find any potential vulnerabilities in a smart contract that he had provided. Being a computer science student with a keen interest in blockchain, I eagerly accepted the challenge and set about analyzing the contract.The challengeOnce home and some intense scrutiny (using a tool he suggested called slinther), I finally hit upon something interesting: a potential reentrancy attack.For those unfamiliar with the concept, a reentrancy attack is a type of vulnerability that allows an attacker to repeatedly call a function in a smart contract, essentially allowing them to drain the contract’s balance and potentially causing it to fail.The part of the contact interested is the following:  function withdraw() public {        require(balanceOf[msg.sender] &gt; 0, \"Insufficient funds\");        (bool success,) = payable(msg.sender).call{value: balanceOf[msg.sender]}(\"\");        require(success, \"Transfer failed\");        balanceOf[msg.sender] = 0;    }As we can see, the update of the balance is being made after a the transaction is made and this opens up a problem.We could make another smart contract interact with this vulnerable one, and use a function called receive() that is triggered everytime a payment is made.Inside this function we can re-call withdraw() immediatelly, and since the balance will not be updated in time, we can drain the contract!An example of the code used:    receive() external payable {        if (address(etherBank).balance &gt; 0) {            console.log(\"reentering...\");            etherBank.withdraw();        } else {            console.log(\"victim account drained\");            //trandfer the funds from the contract to me            payable(owner).transfer(address(this).balance);        }    }    Time to rob the Bank!I was able to confirm my suspicions by writing a test case and running it on a local Ethereum testnet in the Remix IDE. To my amazement, the attack worked exactly as I had predicted, and the smart contract’s balance was quickly drained.I immediately deployed my contract to mainnet and…  120 $ WORTH OF MATIC IN MY WALLET!Some considerationThis bug, is one of the most famous in the smart contracts world, therefore nowadays is really unlikely to find one, thanks to all the tools that are available to help devs in the process of building their contracts.But discovering the reentrancy attack was a thrilling experience for me, and it reinforced my belief in the importance of constantly testing and reviewing code for vulnerabilities.Overall, attending the talk and participating in the challenge was a valuable learning experience.",
            "content_html": "<p>Since I wanted to gather as more information as possible about the Web3 ecosystem, I started looking for some meetup in my area.I found this one that was all about Blockchain develepment called <strong>Web3 Night</strong>, at my university, organized by <a href=\"https://pisa.dev\">Pisa Dev</a>.</p><h2 id=\"where-it-started\">Where it started</h2><p>One of the speaker, made a presentation about how smart contracts can be really easy to write but hard to make them secure, and showed a bunch of tool to help developers writing more secure smart contracts.</p><p>As part of the talk, the speaker challenged the audience to try and find any potential vulnerabilities in <a href=\"https://polygonscan.com/address/0xbAAf846f531d98DFca8Eb06D4B2e2948A5A593C7#code#L1\">a smart contract that he had provided</a>. Being a computer science student with a keen interest in blockchain, I eagerly accepted the challenge and set about analyzing the contract.</p><h2 id=\"the-challenge\">The challenge</h2><p>Once home and some intense scrutiny (using a tool he suggested called <a href=\"https://github.com/crytic/slither\">slinther</a>), I finally hit upon something interesting: a potential <strong>reentrancy attack</strong>.</p><p>For those unfamiliar with the concept, a reentrancy attack is a type of vulnerability that allows an attacker to repeatedly call a function in a smart contract, essentially allowing them to drain the contract’s balance and potentially causing it to fail.</p><p>The part of the contact interested is the following:</p><div class=\"language-solidity highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"k\">function</span> <span class=\"n\">withdraw</span><span class=\"p\">()</span> <span class=\"k\">public</span> <span class=\"p\">{</span>        <span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"n\">balanceOf</span><span class=\"p\">[</span><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">sender</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s\">\"Insufficient funds\"</span><span class=\"p\">);</span>        <span class=\"p\">(</span><span class=\"kt\">bool</span> <span class=\"n\">success</span><span class=\"p\">,)</span> <span class=\"o\">=</span> <span class=\"k\">payable</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">sender</span><span class=\"p\">).</span><span class=\"nb\">call</span><span class=\"p\">{</span><span class=\"n\">value</span><span class=\"o\">:</span> <span class=\"n\">balanceOf</span><span class=\"p\">[</span><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">sender</span><span class=\"p\">]}(</span><span class=\"s\">\"\"</span><span class=\"p\">);</span>        <span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"n\">success</span><span class=\"p\">,</span> <span class=\"s\">\"Transfer failed\"</span><span class=\"p\">);</span>        <span class=\"n\">balanceOf</span><span class=\"p\">[</span><span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">sender</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>    <span class=\"p\">}</span></code></pre></div></div><p>As we can see, the update of the <code class=\"language-plaintext highlighter-rouge\">balance</code> is being made after a the transaction is made and this opens up a problem.</p><p>We could make another smart contract interact with this vulnerable one, and use a function called <code class=\"language-plaintext highlighter-rouge\">receive()</code> that is triggered everytime a payment is made.Inside this function we can <em>re-call</em> <code class=\"language-plaintext highlighter-rouge\">withdraw()</code> immediatelly, and since the balance will not be updated in time, we can drain the contract!</p><p>An example of the code used:</p><div class=\"language-solidity highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"k\">receive</span><span class=\"p\">()</span> <span class=\"k\">external</span> <span class=\"k\">payable</span> <span class=\"p\">{</span>        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"kt\">address</span><span class=\"p\">(</span><span class=\"n\">etherBank</span><span class=\"p\">).</span><span class=\"nb\">balance</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>            <span class=\"n\">console</span><span class=\"p\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s\">\"reentering...\"</span><span class=\"p\">);</span>            <span class=\"n\">etherBank</span><span class=\"p\">.</span><span class=\"n\">withdraw</span><span class=\"p\">();</span>        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>            <span class=\"n\">console</span><span class=\"p\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s\">\"victim account drained\"</span><span class=\"p\">);</span>            <span class=\"c1\">//trandfer the funds from the contract to me</span>            <span class=\"k\">payable</span><span class=\"p\">(</span><span class=\"n\">owner</span><span class=\"p\">).</span><span class=\"nb\">transfer</span><span class=\"p\">(</span><span class=\"kt\">address</span><span class=\"p\">(</span><span class=\"nb\">this</span><span class=\"p\">).</span><span class=\"nb\">balance</span><span class=\"p\">);</span>        <span class=\"p\">}</span>    <span class=\"p\">}</span>    </code></pre></div></div><h2 id=\"time-to-rob-the-bank\">Time to rob the Bank!</h2><p>I was able to confirm my suspicions by writing a test case and running it on a local Ethereum testnet in the <a href=\"https://remix.ethereum.org\">Remix IDE</a>. To my amazement, the attack worked exactly as I had predicted, and the smart contract’s balance was quickly drained.</p><p>I immediately deployed my contract to mainnet and…</p><blockquote>  <p>120 $ WORTH OF MATIC IN MY WALLET!</p></blockquote><h2 id=\"some-consideration\">Some consideration</h2><p>This bug, is one of the most famous in the smart contracts world, therefore nowadays is really unlikely to find one, thanks to all the tools that are available to help devs in the process of building their contracts.</p><p>But discovering the reentrancy attack was a thrilling experience for me, and it reinforced my belief in the importance of constantly testing and reviewing code for vulnerabilities.</p><p>Overall, attending the talk and participating in the challenge was a valuable learning experience.</p>",
            "url": "/2022/12/22/120$-Reentrancy-attack.html",
            
            
            
            "tags": ["blockchain","security"],
            
            "date_published": "2022-12-22T00:00:00+00:00",
            "date_modified": "2022-12-22T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2022/02/09/The-ultimate-streaming-platform.html",
            "title": "The ultimate streaming platform DIY",
            "summary": "an homemade streaming platform, for educational purpose only",
            "content_text": "Is Netflix worth?This question wondered in my mind in the last months.A lot of streaming services were born lately and this made difficult to get everything we want without paying at least 5 different subscriptions.The researchesPlexSo I just DuckDuckgoed, and my first result was Plex, I haveheard of it in the past, but never understand it deeply.Turns out that it transform yuor local Movies and Shows in a self-hostable streaming service,that you can access from anywhere.Thus, it’s a Netflix but with your contents.Sonarr, Radarr and ProwlarrA lot of people online, mentioned other services alongside Plex, and those let me godown the rabbit hole:      Sonarr is a PVR (Personalized Video Recorder) for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.        Radarr is a movie collection manager for Usenet and BitTorrent users. Same feature as Sonarr.        Prowlarr is an indexer manager/proxy and integrate with other arr apps. Prowlarr supports management of both Torrent Trackers and Usenet Indexers.  So this “arr”s ecosystem let us manage and find all we want when we want but not actually get the content. For that we need a Torrent client to interface these apps.TransmissionThe simplest torrent client I found was Transmission.It’s easy to setup and to let it talk to others apps like those mentioned before.OverseerrA final touch will be merging Radarr and Sonarr together in a better UI/UX experience.And this is called Overseerr.The resultNow that we now what services does what, we can connect everything up and start our Netflix.I drew this little scheme to help you get everything right:I tried my best at drawing all this :’)I tested this infrastructure easly on a Raspberry Pi 4 and it wentall flawless.I decided to use docker-compose to easly manage every service. Here you can find the docker-compose.yml file, if you are curious.DISCLAIMERI showed you that there are some alternatives to all the paid streaming services there are out there, and get your own for free, but it goes without saying that this above it’s for educational purpose only.",
            "content_html": "<h2 id=\"is-netflix-worth\">Is Netflix worth?</h2><p>This question wondered in my mind in the last months.</p><p>A lot of streaming services were born lately and this made difficult to get everything we want without paying at least 5 different subscriptions.</p><h2 id=\"the-researches\">The researches</h2><h3 id=\"plex\">Plex</h3><p>So I just <em>DuckDuckgo</em>ed, and my first result was <a href=\"https://www.plex.tv/\">Plex</a>, I haveheard of it in the past, but never understand it deeply.Turns out that it transform yuor local Movies and Shows in a self-hostable streaming service,that you can access from anywhere.</p><p>Thus, it’s a <a href=\"https://www.netflix.com/\">Netflix</a> but with your contents.</p><h3 id=\"sonarr-radarr-and-prowlarr\">Sonarr, Radarr and Prowlarr</h3><p>A lot of people online, mentioned other services alongside Plex, and those let me godown the rabbit hole:</p><ul>  <li>    <p><a href=\"https://sonarr.tv\">Sonarr</a> is a PVR (Personalized Video Recorder) for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.</p>  </li>  <li>    <p><a href=\"https://radarr.video/\">Radarr</a> is a movie collection manager for Usenet and BitTorrent users. Same feature as Sonarr.</p>  </li>  <li>    <p><a href=\"https://prowlarr.com/\">Prowlarr</a> is an indexer manager/proxy and integrate with other <em>arr</em> apps. Prowlarr supports management of both Torrent Trackers and Usenet Indexers.</p>  </li></ul><p>So this “arr”s ecosystem let us manage and find all we want when we want but not actually get the content. For that we need a Torrent client to interface these apps.</p><h3 id=\"transmission\">Transmission</h3><p>The simplest torrent client I found was <a href=\"https://transmissionbt.com/\">Transmission</a>.It’s easy to setup and to let it talk to others apps like those mentioned before.</p><h3 id=\"overseerr\">Overseerr</h3><p>A final touch will be merging <strong>Radarr</strong> and <strong>Sonarr</strong> together in a better UI/UX experience.And this is called <a href=\"https://overseerr.dev\">Overseerr</a>.</p><h2 id=\"the-result\">The result</h2><p>Now that we now what services does what, we can connect everything up and start <strong>our Netflix</strong>.I drew this little scheme to help you get everything right:</p><p><img src=\"/assets/img/stack1.png\" alt=\"schema1\" /><em>I tried my best at drawing all this :’)</em></p><p>I tested this infrastructure easly on a <a href=\"https://www.raspberrypi.org/\">Raspberry Pi 4</a> and it wentall flawless.I decided to use docker-compose to easly manage every service. <a href=\"https://gist.github.com/DavideBri/c4db33f3f7fbf710fa256075e410eedf\">Here</a> you can find the docker-compose.yml file, if you are curious.</p><p><strong>DISCLAIMER</strong><br />I showed you that there are some alternatives to all the paid streaming services there are out there, and get your own for free, but it goes without saying that this above it’s for <strong>educational purpose only</strong>.</p>",
            "url": "/2022/02/09/The-ultimate-streaming-platform.html",
            
            
            
            
            
            "date_published": "2022-02-09T00:00:00+00:00",
            "date_modified": "2022-02-09T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2021/11/09/My-First-NFT.html",
            "title": "My First NFT",
            "summary": "I bought an NFT.",
            "content_text": "No, it’not some .jpeg of a pixeled cartoon animal.A brief introduction to NFTNon-Fungible Tokens are like cryptocurrencies, they are cryptographic tokens registered on a specific blockchain. However, they’re each entirely unique (and therefore, not mutually interchangeable) — like serialized collectibles of the digital world. There are multiple types of NFTs out there. Digital art can be registered on a blockchain, for example, as a way to certify authenticity and ownership. The result would be digital art NFTs that represent ownership of original, authentic artworks.Or..What I bought ?A .crypto domain name. YES! Thanks to Unstoppable Domains we can now purchase a domain name that is a smart contract on a public blockchian, in my case the domain I own is an ERC 721 on the Ethereum blockchain.These domains (or NFT) are stored on it’s owner’s wallet and nobody can take them away. Thing that may happen if you own a traditional domain, it can be censured or taken down.Another feature that convinced me to buy one, is that there are not renewal fees ever!I was able to bought it at 40$. When I’m writing this post I did not Claim it yet. Because the gas fees are too high so it’s not worth it, I’m waiting that Unstoppable Domains enable Polygon network so the Minting and Gass fees will be almost zero.This will happen on 15th of November.Pretty cool, but WHY?This NFT can be used as:  Universal username across apps and websites  Website URL  Payment address for wallets (Multiple wallets)My favourite use is the last one, a easy-to-say wallet address is pretty usefull expecially if it can accept multiple currencies.I’ll update this post when I’ll do the Claiming.— Update of 09/12/2021I went back to Unstoppable domains and, finally, I was able to mint my NFT, I mint my domain. Now it’s in my wallet aka it’s mine.But Im sad to see that I have to wait untill 12/12 to manage it.— Update of 12/12/2021The dashboard displays 5 option:  Crypto: here I can set a wallet for, litterally any coin!  Website: you can link you traditional website, (I linked this blog!), or you can build, as they call it, a decentrilized website (dweb) via some template they offer.  Verify: This feature is enabled only for domains minted on Ethereum :(  Profile: Here you can setup your profile with your name, surname, profile picture, socials and emails (public and private).  Picture [BETA]: If you own an NFT, you can upload it to be displayed as your domain’s imageConclusionsAt this point, I can easly say that an NFT domain is a nice to have, it’s a powerful tool thanks to  its rialiability. Maybe in the future it will have more functionality so its better if you grab yours now ;).If you want to try it here it’s my referral for 10$ off.",
            "content_html": "<p>No, it’not some <code class=\"language-plaintext highlighter-rouge\">.jpeg</code> of a pixeled <a href=\"https://opensea.io/collection/cyberkongz\">cartoon animal</a>.</p><h2 id=\"a-brief-introduction-to-nft\">A brief introduction to NFT</h2><p><strong>N</strong>on-<strong>F</strong>ungible <strong>T</strong>okens are like cryptocurrencies, they are cryptographic tokens registered on a specific blockchain. However, they’re each entirely unique (and therefore, not mutually interchangeable) — like serialized collectibles of the digital world. <br />There are multiple types of NFTs out there. Digital art can be registered on a blockchain, for example, as a way to certify authenticity and ownership. The result would be digital art NFTs that represent ownership of original, authentic artworks.</p><p>Or..</p><h2 id=\"what-i-bought-\">What I bought ?</h2><p>A <strong><em>.crypto domain name</em></strong>. <br />YES! Thanks to <a href=\"https://unstoppabledomains.com/\">Unstoppable Domains</a> we can now purchase a domain name that is a smart contract on a public blockchian, in my case the domain I own is an ERC 721 on the Ethereum blockchain.</p><p>These domains (or NFT) are stored on it’s owner’s wallet and nobody can take them away. Thing that may happen if you own a traditional domain, it can be censured or taken down.</p><p>Another feature that convinced me to buy one, is that there are not renewal fees ever!</p><p>I was able to bought it at 40$. When I’m writing this post I did not Claim it yet. Because the gas fees are too high so it’s not worth it, I’m waiting that Unstoppable Domains enable Polygon network so the Minting and Gass fees will be almost zero.</p><p>This will happen on 15th of November.</p><h2 id=\"pretty-cool-but-why\">Pretty cool, but WHY?</h2><p>This NFT can be used as:</p><ul>  <li>Universal username across apps and websites</li>  <li>Website URL</li>  <li>Payment address for wallets (Multiple wallets)</li></ul><p>My favourite use is the last one, a easy-to-say wallet address is pretty usefull expecially if it can accept multiple currencies.</p><p>I’ll update this post when I’ll do the Claiming.</p><p>— <strong>Update of 09/12/2021</strong></p><p>I went back to Unstoppable domains and, finally, I was able to mint my NFT, I mint my domain. Now it’s in my wallet aka it’s mine.</p><p>But Im sad to see that I have to wait untill 12/12 to manage it.</p><p>— <strong>Update of 12/12/2021</strong></p><p>The dashboard displays 5 option:</p><ol>  <li><strong><code class=\"language-plaintext highlighter-rouge\">Crypto</code></strong>: here I can set a wallet for, litterally any coin!</li>  <li><strong><code class=\"language-plaintext highlighter-rouge\">Website</code></strong>: you can link you traditional website, (I linked this blog!), or you can build, as they call it, a decentrilized website (dweb) via some template they offer.</li>  <li><strong><code class=\"language-plaintext highlighter-rouge\">Verify</code></strong>: This feature is enabled only for domains minted on Ethereum :(</li>  <li><strong><code class=\"language-plaintext highlighter-rouge\">Profile</code></strong>: Here you can setup your profile with your name, surname, profile picture, socials and emails (public and private).</li>  <li><strong><code class=\"language-plaintext highlighter-rouge\">Picture</code></strong> [BETA]: If you own an NFT, you can upload it to be displayed as your domain’s image</li></ol><h2 id=\"conclusions\">Conclusions</h2><p>At this point, I can easly say that an NFT domain is a nice to have, it’s a powerful tool thanks to  its rialiability. Maybe in the future it will have more functionality so its better if you grab yours now ;).If you want to try it here it’s my referral for <a href=\"https://unstoppabledomains.com/?ref=97f9bc9954454aa\">10$ off</a>.</p>",
            "url": "/2021/11/09/My-First-NFT.html",
            
            
            
            
            
            "date_published": "2021-11-09T00:00:00+00:00",
            "date_modified": "2021-11-09T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2021/10/17/SMB-protocol-101.html",
            "title": "SMB protocol 101",
            "summary": "A brief introduction to smb prtocol.",
            "content_text": "I discovered this protocol by doing a HTB’s room which involved a Windows-based machine, and it was my very first time hacking that OS.IntroductionAlso known as Server Message Block, is a client-server protocol, originally created by IBM than updated by Microsoft, that allow access to shared file, printers and ports over the network. We mostly see SMB services running on Windows machines. User side, SMB authentication requires a username and password to allow access to the server. It is controlled by the system administrator, who can add or block users and keep tabs on who is allowed in. Meanwhile at share-level, users have to enter a one-time password to access the shared file or server, but no username is required.Different VersionThere are different variations of this protocol:      SMBv1, released by IBM and modified by Microsoft, this version is also known because the ransomware Wannacry used a vulnerability of this version to spread itself over the network.        SMBv2, performance boosted - debuted in Windows Vista        SMBv3, security increased via end-to-end encryption - introduced in Windows 7        SMBv3.02, possibility to completely disable SMBv1- came with Windows 8.1        SMBv3.1.1, introduced AES-128 encryption, MITM protection and session verification - released in Windows 10  Always check your SMB’s version and update it, if possible.How to use SMBFisrt of all we should know that it operate via TCP on port 445. If we are operating from a Linux machine, the command to see the shares is :smbclient -L {HOSTNAME}This will output something like this:Server time is Sat Aug 10 15:58:27 1996Timezone is UTC+10.0Password: Domain=[WORKGROUP] OS=[Windows NT 3.51] Server=[NT LAN Manager 3.51]Server=[ZIMMERMAN] User=[] Workgroup=[WORKGROUP] Domain=[]        Sharename      Type      Comment        ---------      ----      -------        ADMIN$         Disk      Remote Admin        public         Disk      Public         C$             Disk      Default share        IPC$           IPC       Remote IPC        OReilly        Printer   OReilly        print$         Disk      Printer DriversThis machine has a browse list:        Server               Comment        ---------            -------        HOPPER               Samba 1.9.15p8        KERNIGAN             Samba 1.9.15p8        LOVELACE             Samba 1.9.15p8        RITCHIE              Samba 1.9.15p8        ZIMMERMAN            If you want to reach the public directory on the machine we have to type:smbclient \\\\\\\\{HOSTNAME}\\\\publicIt may ask you for a password.Once we are connected we can do a bunch of operation, type smb: \\&gt; help for more info.",
            "content_html": "<p>I discovered this protocol by doing a <a href=\"https://hackthebox.eu\">HTB</a>’s room which involved a Windows-based machine, and it was my very first time hacking that OS.</p><h1 id=\"introduction\">Introduction</h1><p>Also known as <strong>Server Message Block</strong>, is a client-server protocol, originally created by IBM than updated by Microsoft, that allow access to shared file, printers and ports over the network. <br />We mostly see SMB services running on Windows machines. <br />User side, SMB authentication requires a username and password to allow access to the server. It is controlled by the system administrator, who can add or block users and keep tabs on who is allowed in. <br />Meanwhile at share-level, users have to enter a one-time password to access the shared file or server, but no username is required.</p><h2 id=\"different-version\">Different Version</h2><p>There are different variations of this protocol:</p><ul>  <li>    <p>SMBv1, released by IBM and modified by Microsoft, this version is also known because the ransomware <a href=\"https://en.wikipedia.org/wiki/WannaCry_ransomware_attack\">Wannacry</a> used a vulnerability of this version to spread itself over the network.</p>  </li>  <li>    <p>SMBv2, performance boosted - debuted in Windows Vista</p>  </li>  <li>    <p>SMBv3, security increased via end-to-end encryption - introduced in Windows 7</p>  </li>  <li>    <p>SMBv3.02, possibility to completely disable SMBv1- came with Windows 8.1</p>  </li>  <li>    <p>SMBv3.1.1, introduced AES-128 encryption, MITM protection and session verification - released in Windows 10</p>  </li></ul><p>Always check your SMB’s version and update it, if possible.</p><h3 id=\"how-to-use-smb\">How to use SMB</h3><p>Fisrt of all we should know that it operate via TCP on port 445. If we are operating from a Linux machine, the command to see the shares is :</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>smbclient <span class=\"nt\">-L</span> <span class=\"o\">{</span>HOSTNAME<span class=\"o\">}</span></code></pre></div></div><p>This will output something like this:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Server <span class=\"nb\">time </span>is Sat Aug 10 15:58:27 1996Timezone is UTC+10.0Password: <span class=\"nv\">Domain</span><span class=\"o\">=[</span>WORKGROUP] <span class=\"nv\">OS</span><span class=\"o\">=[</span>Windows NT 3.51] <span class=\"nv\">Server</span><span class=\"o\">=[</span>NT LAN Manager 3.51]<span class=\"nv\">Server</span><span class=\"o\">=[</span>ZIMMERMAN] <span class=\"nv\">User</span><span class=\"o\">=[]</span> <span class=\"nv\">Workgroup</span><span class=\"o\">=[</span>WORKGROUP] <span class=\"nv\">Domain</span><span class=\"o\">=[]</span>        Sharename      Type      Comment        <span class=\"nt\">---------</span>      <span class=\"nt\">----</span>      <span class=\"nt\">-------</span>        ADMIN<span class=\"nv\">$ </span>        Disk      Remote Admin        public         Disk      Public         C<span class=\"nv\">$ </span>            Disk      Default share        IPC<span class=\"nv\">$ </span>          IPC       Remote IPC        OReilly        Printer   OReilly        print<span class=\"nv\">$ </span>        Disk      Printer DriversThis machine has a browse list:        Server               Comment        <span class=\"nt\">---------</span>            <span class=\"nt\">-------</span>        HOPPER               Samba 1.9.15p8        KERNIGAN             Samba 1.9.15p8        LOVELACE             Samba 1.9.15p8        RITCHIE              Samba 1.9.15p8        ZIMMERMAN            </code></pre></div></div><p>If you want to reach the public directory on the machine we have to type:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>smbclient <span class=\"se\">\\\\\\\\</span><span class=\"o\">{</span>HOSTNAME<span class=\"o\">}</span><span class=\"se\">\\\\</span>public</code></pre></div></div><p>It may ask you for a password.</p><p>Once we are connected we can do a bunch of operation, type <code class=\"language-plaintext highlighter-rouge\">smb: \\&gt; help</code> for more info.</p>",
            "url": "/2021/10/17/SMB-protocol-101.html",
            
            
            
            "tags": ["security","networking"],
            
            "date_published": "2021-10-17T00:00:00+00:00",
            "date_modified": "2021-10-17T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2021/10/08/NMAP.html",
            "title": "Nmap",
            "summary": "A brief introduction to nmap tool.",
            "content_text": "nmap is a pentesting tool executed via terminal using nmap command.It’s usefull for port scanning, that means we know if that computer is hosting some Website or open to SSH etc. A port is necessary for making request on a network.Every computer has a total of 65535 available ports; however, many of these are registered as standard ports (1024).So nmap does a check on every port and depending on how the port responds, it can be determined as being open, closed, or filtered (usually by a firewall).Scan typesWhen port scanning with Nmap, there are three basic scan types. These are:  TCP Connect Scans (-sT)This perform a three-way handshake with the ports specified in the command. Depends on what we get back, we can figure it out how’s the port’s status. If we get back a RST flag set -&gt; the port is close; If we get back a SYN/ACK flag set -&gt; the port is open; What if we got nothing back? This mean that the port is hidden behind a firewall and it will be marked as filtered;  SYN Scans (-sS)Also known as stealth scan, is used to scan the TCP port-range.Keep in mind that this scan require sudo permission, because we need to create raw packets not the full TCP handshake.  UDP Scans (-sU)When a packet is sent to an open UDP port, there should be no response. When this happens, nmap refers to the port as being open or filteredAdditionally there are several less common port scan types like:  TCP Null Scans (-sN)Send TCP request is sent with no flags set at all, and if it’s closed it should send back the RST flag.  TCP FIN Scans (-sF)The request is sent with only the FIN flag. Once again, nmap expects a RST if the port is closed.  TCP Xmas Scans (-sX)Send a malformed TCP packet, with only PSH, URG and FIN sets and expects a RST response for closed ports.Nmap Scripting Engine - NSEThis scripts, written in LUA, expands the nmap capability.The standard scripts, stored at /usr/share/nmap/scripts,  are divded by categorys such as: safe, intrusive, vuln, exploit, auth, brute and many more.It’s possible to use this scripts typing:nmap &lt;IP_ADDRESS&gt; -sT -sS --script=&lt;CATEGORY&gt;and, if needed, it possible to parse some arguments to them with --script-args followed by the arguments.",
            "content_html": "<p>nmap is a pentesting tool executed via terminal using <code class=\"language-plaintext highlighter-rouge\">nmap</code> command.</p><p>It’s usefull for <strong>port scanning</strong>, that means we know if that computer is hosting some Website or open to SSH etc. A port is necessary for making request on a network.</p><p>Every computer has a total of 65535 available ports; however, many of these are registered as standard ports (1024).</p><p>So nmap does a check on every port and depending on how the port responds, it can be determined as being open, closed, or filtered (usually by a firewall).</p><h1 id=\"scan-types\">Scan types</h1><p>When port scanning with Nmap, there are three basic scan types. These are:</p><ol>  <li><strong>TCP Connect Scans (-sT)</strong></li></ol><p>This perform a three-way handshake with the ports specified in the command. Depends on what we get back, we can figure it out how’s the port’s status. <br />If we get back a <strong>RST</strong> flag set -&gt; the port is <strong>close</strong>; <br />If we get back a <strong>SYN/ACK</strong> flag set -&gt; the port is <strong>open</strong>; <br />What if we got nothing back? This mean that the port is hidden behind a firewall and it will be marked as <strong>filtered</strong>;</p><ol>  <li><strong>SYN Scans (-sS)</strong></li></ol><p>Also known as <em>stealth</em> scan, is used to scan the TCP port-range.Keep in mind that this scan require sudo permission, because we need to create raw packets not the full TCP handshake.</p><ol>  <li><strong>UDP Scans (-sU)</strong></li></ol><p>When a packet is sent to an open <strong>UDP</strong> port, there should be no response. When this happens, nmap refers to the port as being <strong>open</strong> or <strong>filtered</strong></p><h3 id=\"additionally-there-are-several-less-common-port-scan-types-like\">Additionally there are several less common port scan types like:</h3><ol>  <li><strong>TCP Null Scans (-sN)</strong></li></ol><p>Send TCP request is sent with no flags set at all, and if it’s closed it should send back the <strong>RST</strong> flag.</p><ol>  <li><strong>TCP FIN Scans (-sF)</strong></li></ol><p>The request is sent with only the <strong>FIN</strong> flag. Once again, nmap expects a <strong>RST</strong> if the port is closed.</p><ol>  <li><strong>TCP Xmas Scans (-sX)</strong></li></ol><p>Send a malformed TCP packet, with only <strong>PSH</strong>, <strong>URG</strong> and <strong>FIN</strong> sets and expects a <strong>RST</strong> response for closed ports.</p><h1 id=\"nmap-scripting-engine---nse\">Nmap Scripting Engine - NSE</h1><p>This scripts, written in LUA, expands the nmap capability.The standard scripts, stored at <code class=\"language-plaintext highlighter-rouge\">/usr/share/nmap/scripts</code>,  are divded by categorys such as: <strong>safe</strong>, <strong>intrusive</strong>, <strong>vuln</strong>, <strong>exploit</strong>, <strong>auth</strong>, <strong>brute</strong> and <em><a href=\"https://nmap.org/book/nse-usage.html\">many more</a></em>.</p><p>It’s possible to use this scripts typing:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>nmap &lt;IP_ADDRESS&gt; <span class=\"nt\">-sT</span> <span class=\"nt\">-sS</span> <span class=\"nt\">--script</span><span class=\"o\">=</span>&lt;CATEGORY&gt;</code></pre></div></div><p>and, if needed, it possible to parse some arguments to them with <code class=\"language-plaintext highlighter-rouge\">--script-args</code> followed by the arguments.</p>",
            "url": "/2021/10/08/NMAP.html",
            
            
            
            "tags": ["security","networking"],
            
            "date_published": "2021-10-08T00:00:00+00:00",
            "date_modified": "2021-10-08T00:00:00+00:00",
            
                "author": 
                ""
                
            
        },
    
        {
            "id": "/2021/08/28/2-Factor-Authentication-explained.html",
            "title": "2 Factor Authenticator explained",
            "summary": "What's a 2FA and how it works.",
            "content_text": "Everybody nowadays experienced at least once, after inserting the login credentials to enter a website, the other “tedious” step of writing a temporary code, sent via text messages as token or generated via an authentication app (2FA).This last step can save your accounts to be hacked. Because it’s a One-Time 6 digit code and expires in less than a minute, can offer a second layer of security.Thus even if someone knows your login credentials or stole them, they still not be able to enter if they don’t have access to your 2FA app.This, in short, it’s how 2 Factor Authentication works.Why it’s called 2-Factor Authentication ❔To identify yourself into a system, you could be asked 3 main things:  Something you know.  Something you are.  Something you have.As can you imagine a two factor, involve 2 of these 3 things. An example, similar to 2FA, that we use in our everyday life, is when we go to an ATM to withdraw some money, we have a bank card and we know the pin of it. That are 2 factor.What about the something we are? We’re talking about biometrics, for example, fingerprint or face recognition, a great method, but still not perfect.How a 2FA code it’s made ⚙️If you’re not familiar, here’s a screenshot of the Google Auth app.As you can see, there is a code for each account and there is a little timer that lasts 30 seconds, at the end of it, it will generate a new one.This it’s basically made by an algorithm that randomly outputs a 6 digit code. This can be implemented in different ways, for example, they could be based on TOTP a Time-Based One-time Password.You may know wondering, since it’s random, how the site we are trying to log in is capable of recognizing the right 2FA code.When you enable this layer of security, the site will give you a QR code or a string, that we have to input in the app so it can start generating codes, for that site.That string is a secret key, assigned to your account, that it’s combined, in case the app used a TOTP-based algorithm, with a timestamp to generate a new code every 30 seconds.Can 2FA be reverse engeneered? 👨‍💻No. If we use a well-known third-party software and someone gets our code, they can’t use it to predict the new ones. The only method they have it’s to get access to the app that we use to generate codes.2FA Third-party apps - Wich is the best? 💭As always there are different options to choose from, but by my experience, I can tell that when you’re dealing with multiple accounts, my advice is Authy since having a lot of feature like:  Password protection  Push notifications  Encrypted Backups  And many more…And the migration from Google Authenticator was really easy.",
            "content_html": "<p>Everybody nowadays experienced at least once, after inserting the login credentials to enter a website, the other “tedious” step of writing a temporary code, sent via text messages as token or generated via an authentication app (2FA).</p><p>This last step can save your accounts to be hacked. Because it’s a One-Time 6 digit code and expires in less than a minute, can offer a second layer of security.</p><p>Thus even if someone knows your login credentials or stole them, they still not be able to enter if they don’t have access to your 2FA app.</p><p>This, in short, it’s how 2 Factor Authentication works.</p><h1 id=\"why-its-called-2-factor-authentication-\">Why it’s called 2-Factor Authentication ❔</h1><p>To identify yourself into a system, you could be asked 3 main things:</p><ol>  <li>Something you <strong>know</strong>.</li>  <li>Something you <strong>are</strong>.</li>  <li>Something you <strong>have</strong>.</li></ol><p>As can you imagine a two factor, involve 2 of these 3 things. An example, similar to 2FA, that we use in our everyday life, is when we go to an ATM to withdraw some money, we <strong>have</strong> a bank card and we <strong>know</strong> the pin of it. That are 2 factor.</p><p>What about the something we <strong>are</strong>? <br />We’re talking about biometrics, for example, fingerprint or face recognition, a great method, but still not perfect.</p><h1 id=\"how-a-2fa-code-its-made-️\">How a 2FA code it’s made ⚙️</h1><p>If you’re not familiar, here’s a screenshot of the Google Auth app.</p><p><img src=\"https://play-lh.googleusercontent.com/-15RNeDrob7WSybEtSGTuGu1gj_-RLP_ywlBl8GwoONBKCURKylarxjt8NAT5QKRK00\" alt=\"\" /></p><p>As you can see, there is a code for each account and there is a little timer that lasts 30 seconds, at the end of it, it will generate a new one.</p><p>This it’s basically made by an algorithm that randomly outputs a 6 digit code. This can be implemented in different ways, for example, they could be based on TOTP a Time-Based One-time Password.</p><p>You may know wondering, since it’s random, how the site we are trying to log in is capable of recognizing the right 2FA code.</p><p>When you enable this layer of security, the site will give you a QR code or a string, that we have to input in the app so it can start generating codes, for that site.</p><p>That string is a secret key, assigned to your account, that it’s combined, in case the app used a TOTP-based algorithm, with a timestamp to generate a new code every 30 seconds.</p><h1 id=\"can-2fa-be-reverse-engeneered-\">Can 2FA be reverse engeneered? 👨‍💻</h1><p>No. If we use a well-known third-party software and someone gets our code, they can’t use it to predict the new ones. The only method they have it’s to get access to the app that we use to generate codes.</p><h1 id=\"2fa-third-party-apps---wich-is-the-best-\">2FA Third-party apps - Wich is the best? 💭</h1><p>As always there are different options to choose from, but by my experience, I can tell that when you’re dealing with multiple accounts, my advice is <a href=\"https://authy.com/\">Authy</a> since having a lot of feature like:</p><ul>  <li>Password protection</li>  <li>Push notifications</li>  <li>Encrypted <strong>Backups</strong></li>  <li>And many more…</li></ul><p>And the migration from Google Authenticator was really easy.</p>",
            "url": "/2021/08/28/2-Factor-Authentication-explained.html",
            
            
            
            
            
            "date_published": "2021-08-28T00:00:00+00:00",
            "date_modified": "2021-08-28T00:00:00+00:00",
            
                "author": 
                ""
                
            
        }
    
    ]
}