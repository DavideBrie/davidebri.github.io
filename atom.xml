<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>P0WEX</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2021-10-08T22:07:59+00:00</updated>
 <id></id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Nmap</title>
   <link href="/2021/10/08/NMAP.html"/>
   <updated>2021-10-08T00:00:00+00:00</updated>
   <id>/2021/10/08/NMAP</id>
   <content type="html">&lt;p&gt;nmap is a pentesting tool executed via terminal using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;It‚Äôs usefull for &lt;strong&gt;port scanning&lt;/strong&gt;, that means we know if that computer is hosting some Website or open to SSH etc. A port is necessary for making request on a network.&lt;/p&gt;

&lt;p&gt;Every computer has a total of 65535 available ports; however, many of these are registered as standard ports (1024).&lt;/p&gt;

&lt;p&gt;So nmap does a check on every port and depending on how the port responds, it can be determined as being open, closed, or filtered (usually by a firewall).&lt;/p&gt;

&lt;h1 id=&quot;scan-types&quot;&gt;Scan types&lt;/h1&gt;

&lt;p&gt;When port scanning with Nmap, there are three basic scan types. These are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;TCP Connect Scans (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sT&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This perform a three-way handshake with the ports specified in the command. Depends on what we get back, we can figure it out how‚Äôs the port‚Äôs status.
If we get back a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RST&lt;/code&gt; flag set -&amp;gt; the port is &lt;strong&gt;close&lt;/strong&gt;;
If we get back a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SYN/ACK&lt;/code&gt; flag set -&amp;gt; the port is &lt;strong&gt;open&lt;/strong&gt;;
What if we got nothing back? This mean that the port is hidden behind a firewall and it will be marked as &lt;strong&gt;filtered&lt;/strong&gt;;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;SYN Scans (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sS&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also known as &lt;em&gt;stealth&lt;/em&gt; scan, is used to scan the TCP port-range of a prey(s).
Keep in mind that this scan require sudo permission, because we need to create raw packets not the full TCP handshake.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;UDP Scans (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sU&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When a packet is sent to an open UDP port, there should be no response. When this happens, nmap refers to the port as being &lt;strong&gt;open&lt;/strong&gt; or &lt;strong&gt;filtered&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Additionally there are several less common port scan types like:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;TCP Null Scans (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sN&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Send TCP request is sent with no flags set at all, and if it‚Äôs closed it should send back the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RST&lt;/code&gt; flag.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;TCP FIN Scans (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sF&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The request is sent with only the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FIN&lt;/code&gt;  flag. Once again, nmap expects a RST if the port is closed.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;TCP Xmas Scans (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sX&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Send a malformed TCP packet, with only &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PSH&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URG&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FIN&lt;/code&gt; sets and expects a RST response for closed ports.&lt;/p&gt;

&lt;h1 id=&quot;nmap-scripting-engine---nse&quot;&gt;Nmap Scripting Engine - NSE&lt;/h1&gt;

&lt;p&gt;This scripts, written in &lt;a href=&quot;https://en.wikipedia.org/wiki/Lua_(programming_language)&quot;&gt;LUA&lt;/a&gt;, expands the nmap capability.
The standard scripts, stored at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/share/nmap/scripts&lt;/code&gt;,  are divded by categorys such as: &lt;strong&gt;safe&lt;/strong&gt;, &lt;strong&gt;intrusive&lt;/strong&gt;, &lt;strong&gt;vuln&lt;/strong&gt;, &lt;strong&gt;exploit&lt;/strong&gt;, &lt;strong&gt;auth&lt;/strong&gt;, &lt;strong&gt;brute&lt;/strong&gt; and &lt;em&gt;[many more]&lt;/em&gt;(https://nmap.org/book/nse-usage.html).&lt;/p&gt;

&lt;p&gt;It‚Äôs possible to use this scripts typing:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap &amp;lt;IP_ADDRESS&amp;gt; -sT -sS --script=&amp;lt;CATEGORY&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and, if needed, it possible to parse some arguments to them with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--script-args&lt;/code&gt; followed by the arguments.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>2 Factor Authenticator explained</title>
   <link href="/2021/08/28/2-Factor-Authentication-explained.html"/>
   <updated>2021-08-28T00:00:00+00:00</updated>
   <id>/2021/08/28/2-Factor-Authentication-explained</id>
   <content type="html">&lt;p&gt;Everybody nowadays experienced at least once, after inserting the login credentials to enter a website, the other ‚Äútedious‚Äù step of writing a temporary code, sent via text messages as token or generated via an authentication app (2FA).&lt;/p&gt;

&lt;p&gt;This last step can save your accounts to be hacked. Because it‚Äôs a One-Time 6 digit code and expires in less than a minute, can offer a second layer of security.&lt;/p&gt;

&lt;p&gt;Thus even if someone knows your login credentials or stole them, they still not be able to enter if they don‚Äôt have access to your 2FA app.&lt;/p&gt;

&lt;p&gt;This, in short, it‚Äôs how 2 Factor Authentication works.&lt;/p&gt;

&lt;h1 id=&quot;why-its-called-2-factor-authentication-&quot;&gt;Why it‚Äôs called 2-Factor Authentication ‚ùî&lt;/h1&gt;

&lt;p&gt;To identify yourself into a system, you could be asked 3 main things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Something you &lt;strong&gt;know&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Something you &lt;strong&gt;are&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Something you &lt;strong&gt;have&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As can you imagine a two factor, involve 2 of these 3 things. An example, similar to 2FA, that we use in our everyday life, is when we go to an ATM to withdraw some money, we &lt;strong&gt;have&lt;/strong&gt; a bank card and we &lt;strong&gt;know&lt;/strong&gt; the pin of it. That are 2 factor.&lt;/p&gt;

&lt;p&gt;What about the something we &lt;strong&gt;are&lt;/strong&gt;? &lt;br /&gt;
We‚Äôre talking about biometrics, for example, fingerprint or face recognition, a great method, but still not perfect.&lt;/p&gt;

&lt;h1 id=&quot;how-a-2fa-code-its-made-Ô∏è&quot;&gt;How a 2FA code it‚Äôs made ‚öôÔ∏è&lt;/h1&gt;

&lt;p&gt;If you‚Äôre not familiar, here‚Äôs a screenshot of the Google Auth app.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://play-lh.googleusercontent.com/-15RNeDrob7WSybEtSGTuGu1gj_-RLP_ywlBl8GwoONBKCURKylarxjt8NAT5QKRK00&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, there is a code for each account and there is a little timer that lasts 30 seconds, at the end of it, it will generate a new one.&lt;/p&gt;

&lt;p&gt;This it‚Äôs basically made by an algorithm that randomly outputs a 6 digit code. This can be implemented in different ways, for example, they could be based on TOTP a Time-Based One-time Password.&lt;/p&gt;

&lt;p&gt;You may know wondering, since it‚Äôs random, how the site we are trying to log in is capable of recognizing the right 2FA code.&lt;/p&gt;

&lt;p&gt;When you enable this layer of security, the site will give you a QR code or a string, that we have to input in the app so it can start generating codes, for that site.&lt;/p&gt;

&lt;p&gt;That string is a secret key, assigned to your account, that it‚Äôs combined, in case the app used a TOTP-based algorithm, with a timestamp to generate a new code every 30 seconds.&lt;/p&gt;

&lt;h1 id=&quot;can-2fa-be-reverse-engeneered-&quot;&gt;Can 2FA be reverse engeneered? üë®‚Äçüíª&lt;/h1&gt;

&lt;p&gt;No. If we use a well-known third-party software and someone gets our code, they can‚Äôt use it to predict the new ones. The only method they have it‚Äôs to get access to the app that we use to generate codes.&lt;/p&gt;

&lt;h1 id=&quot;2fa-third-party-apps---wich-is-the-best-&quot;&gt;2FA Third-party apps - Wich is the best? üí≠&lt;/h1&gt;

&lt;p&gt;As always there are different options to choose from, but by my experience, I can tell that when you‚Äôre dealing with multiple accounts, my advice is &lt;a href=&quot;https://authy.com/&quot;&gt;Authy&lt;/a&gt; since having a lot of feature like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Password protection&lt;/li&gt;
  &lt;li&gt;Push notifications&lt;/li&gt;
  &lt;li&gt;Encrypted &lt;strong&gt;Backups&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;And many more‚Ä¶&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the migration from Google Authenticator was really easy.&lt;/p&gt;
</content>
 </entry>
 

</feed>
